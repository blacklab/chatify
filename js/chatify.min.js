var App=Ember.Application.create({autoinit:!1,LOG_TRANSITIONS:!0}),CONFIG={host:"https://blacklab.taurus.uberspace.de/ejabberd/http-bind"};var IM={};function onStatus(a){console.log("Status: "+a)}
IM.Client=function(a){this.host=a.host||"/http-bind";this.jid=a.jid;this.password=a.password;this.connection=new Strophe.Connection(this.host);this.jids={};a.debug&&($.subscribe("error.client.im",onStatus),$.subscribe("connecting.client.im",onStatus),$.subscribe("connfail.client.im",onStatus),$.subscribe("authenticating.client.im",onStatus),$.subscribe("authfail.client.im",onStatus),$.subscribe("connected.client.im",onStatus),$.subscribe("diconnecting.client.im",onStatus),$.subscribe("diconnected.client.im",
onStatus),$.subscribe("attached.client.im",onStatus),this.connection.xmlInput=function(a){console.log("Incoming:");console.log(a)},this.connection.xmlOutput=function(a){console.log("Outgoing:");console.log(a)})};
IM.Client.prototype._onConnect=function(a){console.log("Status: "+a);var b=Strophe.Status;switch(a){case b.ERROR:$.publish("error.client.im",a);break;case b.CONNECTING:$.publish("connecting.client.im",a);break;case b.CONNFAIL:$.publish("connfail.client.im",a);break;case b.AUTHENTICATING:$.publish("authenticating.client.im",a);break;case b.AUTHFAIL:$.publish("authfail.client.im",a);break;case b.CONNECTED:this._onConnected();$.publish("connected.client.im",a);break;case b.DISCONNECTING:$.publish("diconnecting.client.im",
a);break;case b.DISCONNECTED:$.publish("diconnected.client.im",a);break;case b.ATTACHED:$.publish("attached.client.im",a)}return!0};IM.Client.prototype._onConnected=function(){this.getRoster(null,_.bind(this._onRoster,this));this.connection.addHandler(_.bind(this._onRosterChange,this),Strophe.NS.ROSTER,"iq","set");this.connection.addHandler(_.bind(this._onPresenceChange,this),null,"presence");this.connection.addHandler(_.bind(this._onMessage,this),null,"message","chat");this.presence()};
IM.Client.prototype._onPresenceChange=function(a){a=$(a);var b=a.attr("from");Strophe.getBareJidFromJid(b);var c="unavailable"===a.attr("type")?"offline":"online";a={from:b,type:a.attr("type")||"available",show:a.find("show").text()||c,status:a.find("status").text()};$.publish("presence.client.im",a);return!0};
IM.Client.prototype._onMessage=function(a){a=$(a);console.log("_onMessage in IM.Client");var b=a.attr("from"),c=Strophe.getBareJidFromJid(b),d=a.children("body").text();activity="active";message={id:a.attr("id"),from:b,to:a.attr("to"),body:d,activity:activity};this.jids[c]=b;$.publish("message.client.im",message);return!0};IM.Client.prototype._onRoster=function(a){a=this._handleRosterStanza(a);$.publish("roster.client.im",[a]);return!0};
IM.Client.prototype._onRosterChange=function(a){a=this._handleRosterStanza(a);$.publish("rosterChange.client.im",[a]);return!0};IM.Client.prototype._handleRosterStanza=function(a){var b=this;return $(a).find("item").map(function(a,d){d=$(d);var e=d.attr("jid"),f=Strophe.getBareJidFromJid(e);b.jids[f]=e;return{jid:e,subscription:d.attr("subscription")}}).get()};IM.Client.prototype.connect=function(){this.connection.connect(this.jid,this.password,_.bind(this._onConnect,this));return this};
IM.Client.prototype.disconnect=function(){this.connection.flush();this.connection.disconnect();$.publish("disconnected.client.im")};IM.Client.prototype.send=function(a){this.connection.send(a)};IM.Client.prototype.iq=function(a,b,c){this.connection.sendIQ(a,c,b)};IM.Client.prototype.presence=function(a){var b=$pres();a&&b.attrs({type:a});this.send(b)};IM.Client.prototype.message=function(a,b){var c=$msg({to:a,type:"chat"}).c("body").t(b);this.send(c)};
IM.Client.prototype.getRoster=function(a,b){var c=$iq({type:"get"}).c("query",{xmlns:Strophe.NS.ROSTER});this.iq(c,a,b)};App.Resource=Ember.Object.extend({show:null,status:null});
App.User=Ember.Object.extend({jid:null,subscription:"none",resources:null,init:function(){this.set("resources",[])},name:function(){var a=this.get("jid");return a?Strophe.getNodeFromJid(a):a}.property("jid").cacheable(),id:function(){return Strophe.getBareJidFromJid(this.get("jid"))}.property("jid").cacheable(),presence:function(){return this.get("resources").length?"available":"unavailable"}.property("resources.length").cacheable(),online:function(){return"available"===this.get("presence")}.property("presence"),
setPresence:function(a){var b=this.get("resources"),c=Strophe.getResourceFromJid(a.from),d=b.findProperty("id",c);"unavailable"===a.type&&d?b.removeObject(d):d?d.setProperties({show:a.show,status:a.status}):(d=App.Resource.create({id:c,show:a.show,status:a.status}),b.addObject(d));return d}});App.Conversation=Ember.Object.extend({init:function(){this._super();console.log("Init called for App.Conversation");this.set("messages",Em.A())},sendChat:function(a){xmppClient&&(a.to=this.get("friendJid"),xmppClient.message(a.to,a.body),a=App.Conversation._extractTracks(a),this.get("messages").pushObject(a))}});
App.Conversation=App.Conversation.reopenClass({store:{},subscribed:!1,subscribe:function(){this.subscribed||(console.log("Bind to XMPP client."),$.subscribe("message.client.im",_.bind(this._onMessage,this)),this.subscribed=!0)},find:function(a){this.store[a]||(this.store[a]=App.Conversation.create({friendJid:a}));return this.store[a]},_extractTracks:function(a){var b=a.body.match(/spotify:track:[A-Za-z0-9]{22}/g);a.tracks=Em.A();_.each(b,function(b){a.tracks.push(b)});return a},_onMessage:function(a,
b){bare_jid=Strophe.getBareJidFromJid(b.from);""!==b.body&&(b=this._extractTracks(b),App.Conversation.find(bare_jid).get("messages").pushObject(b))}});App.Roster=Ember.Object.extend({init:function(){this._super();this.set("subscribed",!1);this.set("friends",null)},_subscribe:function(){this.get("subscribed")||(console.log("Bind to XMPP client."),$.subscribe("roster.client.im",_.bind(this._onRoster,this)),$.subscribe("presence.client.im",_.bind(this._onPresenceChange,this)),this.set("subscribed",!0))},find:function(a){console.log("Find is called for roster")},_setFriendPresence:function(a){var b=a.from,c=Strophe.getBareJidFromJid(b);(c=this.get("friends").findProperty("jid",
c))?c.setPresence(a):console.warn("Presence update from user not in the roster: "+b+":"+a.type)},_onRoster:function(a,b){var c=Em.A();_.map(b,function(a){bareJid=Strophe.getBareJidFromJid(a.jid);a.jid=bareJid;c.push(App.User.create(a))});this.set("friends",c)},_onPresenceChange:function(a,b){var c=Strophe.getBareJidFromJid(b.from);switch(b.type){case "error":break;case "subscribe":break;case "unsubscribe":break;case "subscribed":break;case "unsubscribed":break;default:App.user.get("jid")===c?console.log("TODO: set own presence"):
this._setFriendPresence(b)}}});App.Roster=App.Roster.reopenClass({});App.ConversationsConversationController=Ember.ObjectController.extend({sendChat:function(a){this.get("content").sendChat(a)},allTracks:function(){var a=Em.A();this.get("messages").forEach(function(b,c,d){console.log("Add tracks: ",b.tracks);a.pushObjects(b.tracks)});return a}.property("content.messages.@each")});App.PlaylistView=Ember.View.extend({templateName:"playlist"});Ember.Handlebars.registerBoundHelper("join",function(a){return a.join(",")});Ember.Handlebars.registerBoundHelper("uglyplayer",function(a){a=_.map(a,function(a){return a.substring(14)}).join(",");return new Handlebars.SafeString('<iframe src="https://embed.spotify.com/?uri=spotify:trackset:CHATIFY:'+a+'"frameborder="0" allowtransparency="true" height="800"></iframe>')});var xmppClient=null;
App.RosterController=Ember.ObjectController.extend({content:null,init:function(){this._super()},loadedRoster:function(){return null!=this.get("content").get("friends")}.property("content.friends")});App.RosterView=Ember.View.extend({templateName:"roster"});App.LoginIndexController=Ember.ObjectController.extend({loggedIn:null,init:function(){this._super();this.set("loggedIn",!1)},setStatus:function(a){this.set("loggedIn",a)},isLoggedIn:function(){return this.get("loggedIn")}});
App.LoginConnectController=Ember.ObjectController.extend({error:null,init:function(){this._super();this.set("error",null);$.subscribe("connected.client.im",_.bind(this._onConnected,this));$.subscribe("error.client.im",_.bind(this._onError,this));$.subscribe("connfail.client.im",_.bind(this._onError,this));$.subscribe("authfail.client.im",_.bind(this._onError,this))},backToLogin:function(){this.set("error",null);this.transitionToRoute("login.index")},_onError:function(a,b){this.set("error","Error: "+
b+" - "+a.type);this.controllerFor("loginIndex").setStatus(!1)},_onConnected:function(){this.set("error",null);this.controllerFor("loginIndex").setStatus(!0);console.log("Connected to XMPP server");this.transitionToRoute("conversations.index")}});
App.LoginDisconnectController=Ember.ObjectController.extend({init:function(){this._super();$.subscribe("diconnected.client.im",_.bind(this._onDisconnected,this))},_onDisconnected:function(){this.controllerFor("loginIndex").setStatus(!1);console.log("Disconnected from XMPP server");this.transitionToRoute("login.index")}});App.user=Ember.Object.create({jid:"karsten@karsten-n",password:""});
App.ApplicationController=Ember.Controller.extend({debug:!0,init:function(){this._super()},connectXMPPClient:function(){xmppClient=new IM.Client({jid:App.user.jid,password:App.user.password,host:CONFIG.host,debug:this.debug});xmppClient.connect()},disconnectXMPPClient:function(){xmppClient.disconnect()}});App.ApplicationView=Ember.View.extend({templateName:"application"});
App.MessageTextAreaView=Ember.TextArea.extend({classNames:["message-text-area"],keyDown:function(a){if(13===a.which&&!a.shiftKey){a.preventDefault();a={body:this.get("value"),from:App.user.jid};this.set("value","");var b=this.get("controller");console.log("Pressed enter:",b);b.sendChat(a)}}});
App.Router.map(function(){this.route("index",{path:"/index.html"});this.resource("login",function(){this.route("connect");this.route("disconnect")});this.resource("conversations",{path:"/conversation"},function(){this.route("conversation",{path:"/:conversation_id"})})});App.IndexRoute=Ember.Route.extend({redirect:function(){!1==this.controllerFor("loginIndex").isLoggedIn()?this.transitionTo("login"):this.transitionTo("conversation")}});
App.RosterRoute=Ember.Route.extend({model:function(){console.log("RosterRoute.model called");return[]}});App.LoginRoute=Ember.Route.extend({activate:function(){console.log("Enter login")}});App.LoginIndexRoute=Ember.Route.extend({activate:function(){console.log("Enter login.index")},renderTemplate:function(){this.render("login/index",{into:"login"})}});App.LoginConnectRoute=Ember.Route.extend({activate:function(){this.controllerFor("application").connectXMPPClient()}});App.LoginDisconnectRoute=Ember.Route.extend({activate:function(){this.controllerFor("application").disconnectXMPPClient()}});
App.ConversationsRoute=Ember.Route.extend({setupController:function(a,b){console.log("Setup controller in ConversationsRoute");var c=App.Roster.create();c._subscribe();this.controllerFor("roster").set("content",c);console.log("Found controller")},renderTemplate:function(){this.render("conversations");this.render("roster",{into:"conversations",outlet:"roster",controller:"roster"})}});
App.ConversationsIndexRoute=Ember.Route.extend({activate:function(){console.log("Enter conversation");var a=this.controllerFor("loginIndex").isLoggedIn();console.log("Loggedin: "+a)},renderTemplate:function(){this.render("conversations/index",{outlet:"conversation"})}});
App.ConversationsConversationRoute=Ember.Route.extend({model:function(a){console.log("Parameters: "+a);return null},setupController:function(a,b){conv=App.Conversation.find(b.get("id"));a.set("content",conv)},renderTemplate:function(){this.render("conversations/conversation",{outlet:"conversation"})}});App.Conversation.subscribe();App.initialize();
